version: "3.7"
services:
  pia:
    build: https://github.com/qdm12/private-internet-access-docker.git
    image: qmcgaw/private-internet-access
    container_name: pia
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    network_mode: bridge
    ports:
      - 8112:8112
      - 58846:58846
    init: true
    environment:
      - USER=${PIA_USER}
      - PASSWORD=${PIA_PASSWORD}
      - ENCRYPTION=strong
      - PROTOCOL=udp
      - REGION=US East
      - NONROOT=no
      - DOT=on
      - BLOCK_MALICIOUS=on
      - BLOCK_NSA=off
      - UNBLOCK=
      - FIREWALL=on
      - EXTRA_SUBNETS=
      - TINYPROXY=on
      - TINYPROXY_LOG=Critical
      - TINYPROXY_USER=
      - TINYPROXY_PASSWORD=
    restart: always
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New York
      - UMASK_SET=022 #optional
    volumes:
      - ~/.media/config/sonarr:/config
      - ~/.media/tvseries:/tv
      - ~/.media/downloads:/downloads
    network_mode: host
    ports:
      - 8989:8989
    restart: unless-stopped
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New York
      - UMASK_SET=022 #optional
    volumes:
      - ~/.media/config/radarr:/config
      - ~/.media/downloads:/downloads
      - ~/.media/movies:/movies
    network_mode: host
    ports:
      - 7878:7878
    restart: unless-stopped
  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./proxy-control.conf:/etc/nginx/proxy-control.conf
      - ./nginx/error.log:/etc/nginx/error_log.log
      - ./nginx/cache/:/etc/nginx/cache
    network_mode: host
    ports:
      - 80:80
  deluge:
    image: linuxserver/deluge
    container_name: deluge
    network_mode: "service:pia"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=timezone
      - DELUGE_LOGLEVEL=info
    volumes:
      - ~/.media/config/deluge:/config
      - ~/.media/downloads:/downloads
    restart: unless-stopped
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - ~/.media/config/jackett:/config
      - ~/.media/downloads:/downloads
    ports:
      - 9117:9117
    restart: unless-stopped
  jellyfin:  
    image: jellyfin/jellyfin  
    container_name: jellyfin
    network_mode: "host"  
    volumes:  
      - ~/.media/config/jellyfin:/config  
      - ~/.media/cache:/cache  
      - ~/.media/tvseries:/tv
      - ~/.media/movies:/movies
    devices:
      - /dev/vchiq:/dev/vchiq
    privileged: true
    restart: unless-stopped
    #plex:
    #image: linuxserver/plex
    #container_name: plex
    # network_mode: host
    #environment:
    #- PUID=1000
    # - PGID=1000
    # - VERSION=docker
    # - UMASK_SET=022 #optional
    #ports:
    # - 32400:32400/tcp
    # - 32400:32400/udp
    # - 32469:32469/tcp
    # - 32469:32469/udp
        # https://support.plex.tv/articles/201543147-what-network-ports-do-i-need-to-allow-through-my-firewall/
        #- 5353:5353/udp
        # - 1900:1900/udp
        #volumes:
        #- ~/.media/config/plex:/config
        #- ~/.media/tvseries:/data/tvshows
        #- ~/.media/movies:/data/movies
        #- ~/.media/plex_tmp:/transcode
        #devices:
        #- /dev/vchiq:/dev/vchiq
        #restart: unless-stopped
  ddns-updater:
    image: qmcgaw/ddns-updater
    container_name: ddns-updater
    build:
        context: https://github.com/qdm12/ddns-updater.gitA
        dockerfile: qmcgaw/ddns-updater
        args:
          BASE_IMAGE_BUILDER: arm32v7/golang
          BASE_IMAGE: arm32v7/alpine
          GOARCH: arm 
    network_mode: bridge
    ports:
      - 8000:8000/tcp
      - 443:443/tcp
      - 53:53/udp
    volumes:
      - ~/.media/ddns:/updater/data
    environment:
      - DELAY=300
      - ROOTURL=
      - LISTENINGPORT=8000
      - LOGGING=human
      - NODEID=0
      - LOGLEVEL=
    restart: always
  ombi:
    image: linuxserver/ombi
    container_name: ombi
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      - BASE_URL=/ombi #optional
    volumes:
      - ~/.mediai/config/ombi:/config
    network_mode: host
    ports:
      - 3579:3579
    restart: unless-stopped 
